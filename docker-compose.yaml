services:
  mariadb:
    image: mariadb:10.6
    container_name: wedding_mariadb
    restart: unless-stopped
    environment:
      MARIADB_USER: "${DB_WEDDING_SITE_USERNAME}"
      MARIADB_PASSWORD: "${DB_WEDDING_SITE_PASSWORD}"
      MARIADB_DATABASE: "wedding_site"
      MARIADB_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      MONITORING_PASSWORD: "${MONITORING_PASSWORD}"
      TZ: "UTC"
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "monitoring", "-p${MONITORING_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - wedding_network
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --max-connections=50
      - --innodb-buffer-pool-size=128M
      - --expire-logs-days=0
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "mariadb"
        
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
      - loki_data:/tmp/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - wedding_network
#    healthcheck:
#      test: ["CMD-SHELL", "wget -q --spider http://localhost:3100/ready || exit 1"]
#      interval: 10s
#      timeout: 5s
#      retries: 3
#      start_period: 20s

  promtail:
    image: grafana/promtail:latest
    volumes:
      - ./promtail-config.yaml:/etc/promtail/config.yaml
      - ./logs:/var/log/wedding
    command: -config.file=/etc/promtail/config.yaml
    networks:
      - wedding_network
    depends_on:
      loki:
        condition: service_healthy

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - ./grafana-provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    networks:
      - wedding_network
    depends_on:
      - loki

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "5005:5005"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mariadb://mariadb:3306/wedding_site
      - SPRING_DATASOURCE_USERNAME=${DB_WEDDING_SITE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DB_WEDDING_SITE_PASSWORD}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - JWT_SECRET=${JWT_SECRET:-default-secret-key}
      - DEFAULT_PASSWORD=mywedding
      - LOGGING_LEVEL_COM_ZLATENOV_WEDDING_BACKEND=DEBUG
      - LOKI_URL=http://loki:3100/loki/api/v1/push
      - LOG_PATH=/var/log/wedding
    volumes:
      - ./logs:/var/log/wedding
    depends_on:
      mariadb:
        condition: service_healthy
      loki:
        condition: service_healthy
    networks:
      - wedding_network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://backend:8080/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"
        tag: "backend"


  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - backend
      - promtail
    networks:
      - wedding_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "frontend"

volumes:
  mariadb_data:
    name: wedding_mariadb_data
  loki_data:
    name: wedding_loki_data
  grafana_data:
    name: wedding_grafana_data

networks:
  wedding_network:
    name: wedding_network
    driver: bridge


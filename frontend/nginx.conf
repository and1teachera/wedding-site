user nginx;
worker_processes auto;
pid /var/run/nginx.pid;

error_log /var/log/nginx/error.log warn;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Map to redact sensitive information from Authorization header
    map $http_authorization $http_authorization_masked {
        default 'Bearer [REDACTED]';
        "~^Bearer\s+(.{5})(.*)$" 'Bearer $1...';
        '' '';
    }

    # JSON access log format with enhanced security headers
    log_format json_combined escape=json
        '{'
        '"timestamp":"$time_iso8601",'
        '"client_ip":"$remote_addr",'
        '"forwarded_for":"$http_x_forwarded_for",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"method":"$request_method",'
        '"uri":"$request_uri",'
        '"status":"$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"request_time":"$request_time",'
        '"request_id":"$http_x_request_id",'
        '"trace_id":"$http_x_trace_id",'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"auth_header":"$http_authorization_masked",'
        '"host":"$host",'
        '"server_protocol":"$server_protocol"'
        '}';

    access_log /var/log/nginx/access.log json_combined;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    gzip on;

    server {
        listen 80;
        server_name localhost;

        # Frontend app root
        root /usr/share/nginx/html/browser;
        index index.html;

        # Propagate request IDs
        proxy_set_header X-Request-ID $http_x_request_id;
        add_header X-Request-ID $request_id always;

        # Frontend routes
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Backend API proxy
        location /api/ {
            proxy_pass http://backend:8080/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # Forward trace ID from backend's response
            add_header X-Trace-ID $upstream_http_x_trace_id always;
        }

        # Forward health check requests
        location /actuator/ {
            proxy_pass http://backend:8080/actuator/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
        }
        
        # Nginx status endpoint for Prometheus metrics
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 172.16.0.0/12;  # Allow Docker network
            allow 127.0.0.1;      # Allow localhost
            deny all;             # Deny all other connections
        }

        # Error handling
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}